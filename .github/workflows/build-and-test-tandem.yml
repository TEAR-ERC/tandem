name: Build and Test Tandem

on:
  workflow_call:
    inputs:
      petsc_version:
        required: true
        type: string
      dependencies_image:
        required: true
        type: string

jobs:
  build-and-test:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        compiler:
          - cc: gcc-13
            cxx: g++-13
          - cc: clang-18
            cxx: clang++-18
        dimension: [2, 3]
        degree: [3]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Login to GHCR
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Pull dependencies image
        run: docker pull ${{ inputs.dependencies_image }}:${{ inputs.petsc_version }}

      - name: Build Tandem
        run: |
          IMAGE=${{ inputs.dependencies_image }}:${{ inputs.petsc_version }}
          docker run --rm \
            -v ${{ github.workspace }}:/app \
            -w /app \
            -e CC=${{ matrix.compiler.cc }} \
            -e CXX=${{ matrix.compiler.cxx }} \
            --user tandem \
            $IMAGE \
            bash -c "
              set -e
              sudo update-alternatives --install /usr/bin/cc cc /usr/bin/\$CC 100
              sudo update-alternatives --install /usr/bin/c++ c++ /usr/bin/\$CXX 100

              mkdir -p build_${{ matrix.dimension }}d_p${{ matrix.degree }} && cd build_${{ matrix.dimension }}d_p${{ matrix.degree }}
              cmake .. -DCMAKE_PREFIX_PATH=/opt/petsc \
                      -DDOMAIN_DIMENSION=${{ matrix.dimension }} \
                      -DPOLYNOMIAL_DEGREE=${{ matrix.degree }} \
                      -DCMAKE_C_COMPILER=\$CC \
                      -DCMAKE_CXX_COMPILER=\$CXX \
                      -DRUN_CI_TESTS=ON
              make -j$(nproc)"

      - name: Run Tests
        run: |
          IMAGE=${{ inputs.dependencies_image }}:${{ inputs.petsc_version }}
          docker run --rm \
            -v ${{ github.workspace }}:/app \
            -w /app/build_${{ matrix.dimension }}d_p${{ matrix.degree }} \
            --user tandem \
            $IMAGE \
            make test

      - name: Rename doctest log
        if: always()
        run: |
          mv "${{ github.workspace }}/build_${{ matrix.dimension }}d_p${{ matrix.degree }}/Testing/Temporary/LastTest.log" \
            "${{ github.workspace }}/build_${{ matrix.dimension }}d_p${{ matrix.degree }}/Testing/Temporary/LastTest_${{ matrix.dimension }}d_p${{ matrix.degree }}_${{ matrix.compiler.cc }}.log"

      - name: Upload test logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: logs-${{ matrix.dimension }}d-p${{ matrix.degree }}-${{ matrix.compiler.cc }}
          path: |
            ${{ github.workspace }}/build_${{ matrix.dimension }}d_p${{ matrix.degree }}/Testing/Temporary/LastTest_${{ matrix.dimension }}d_p${{ matrix.degree }}_${{ matrix.compiler.cc }}.log
