jobs:
  - job:
    displayName: tandem-build
    variables:
      PETSC_CACHE_FOLDER: $(Pipeline.Workspace)/.petsc
      # Define variables for PETSc version, compiler, and architecture
      PETSC_VERSION: '3.18.5'
      COMPILER: 'gcc-12'
      ARCHITECTURE: 'arch-linux-c-opt'
      # Construct the cache key based on variables
      PETSC_CACHE_KEY: 'petsc-${{ variables.PETSC_VERSION }}-${{ variables.COMPILER }}-${{ variables.ARCHITECTURE }}'

    pool:
      vmImage: ubuntu-22.04

    steps:
     - checkout: self

     - task: Cache@2
       inputs:
        key: '"${{ variables.PETSC_CACHE_KEY }}"'
        restoreKeys: '"${{ variables.PETSC_CACHE_KEY }}-*"'
        path: ${{ variables.PETSC_CACHE_FOLDER }}
        cacheHitVar: CACHE_HIT
       displayName: 'try restoring cached PETSc Installation'

     - script:
        git submodule update --init --recursive
       displayName: 'Initialize and Update Submodules'

     - bash: |
          pwd
          set -euo pipefail
          sudo apt-get update
          sudo apt-get -y install gcc-12 g++-12 cmake openmpi-bin openmpi-common libopenmpi-dev libmetis-dev libparmetis-dev libeigen3-dev python3 python3-numpy libopenblas-base libopenblas-dev liblua5.3-0 liblua5.3-dev

       displayName: 'before_install'

     - bash: |
          set -euo pipefail
          install_dir=${{ variables.PETSC_CACHE_FOLDER }}
          version=${{ variables.PETSC_VERSION }}
          mkdir ${install_dir}
          wget http://ftp.mcs.anl.gov/pub/petsc/release-snapshots/petsc-lite-${version}.tar.gz
          tar -xvf petsc-lite-${version}.tar.gz
          cd petsc-${version}
          ./configure --with-fortran-bindings=0 --with-debugging=0 \
              --with-memalign=32 --with-64-bit-indices \
              CC=mpicc CXX=mpicxx FC=mpif90 --prefix=${install_dir}
          COPTFLAGS="-g -O3" CXXOPTFLAGS="-g -O3"
          make PETSC_DIR=`pwd` PETSC_ARCH=arch-linux-c-opt -j4
          make PETSC_DIR=`pwd` PETSC_ARCH=arch-linux-c-opt install
          cd ..
       displayName: 'install petsc'
       condition: ne(variables.CACHE_HIT, 'true')


     - bash: |
        set -euo pipefail
        mkdir build && cd build
        cmake .. -DCMAKE_PREFIX_PATH=${{ variables.PETSC_CACHE_FOLDER }}
        make -j4
        make test
       displayName: 'install and test tandem'
